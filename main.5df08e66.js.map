{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","addRowEl","delRowEl","addColEl","delColEl","MAXlines","MINlines","addEventListener","rowCount","rows","length","cellCount","cells","row","insertRow","i","insertCell","insertAdjacentHTML","deleteRow","el","append","lastElementChild","cloneNode","remove"],"mappings":";AAAA,aA+CA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7CA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAWF,SAASC,cAAc,eAClCE,EAAWH,SAASC,cAAc,eAClCG,EAAWJ,SAASC,cAAc,kBAClCI,EAAWL,SAASC,cAAc,kBAClCK,EAAW,GACXC,EAAW,EAEjBL,EAASM,iBAAiB,QAAS,WAC3BC,IAAAA,EAAWV,EAAMW,KAAKC,OACtBC,EAAYb,EAAMW,KAAK,GAAGG,MAAMF,OAChCG,EAAMf,EAAMgB,UAAUN,GAExBA,KAAAA,GAAYH,GAIX,IAAA,IAAIU,EAAI,EAAGA,EAAIJ,EAAWI,IAAK,CACrBF,EAAIG,WAAWD,GAEvBE,mBAAmB,YAAa,gBAIzCf,EAASK,iBAAiB,QAAS,WAC3BC,IAAAA,EAAWV,EAAMW,KAAKC,OAExBF,GAAYF,GAGhBR,EAAMoB,UAAUV,EAAW,KAG7BL,EAASI,iBAAiB,QAAS,WAG7BI,KAFcb,EAAMW,KAAK,GAAGG,MAAMF,QAErBL,GAAbM,CAIab,IAPsB,EAOtBA,EAAAA,EAAAA,EAAMW,MAPgB,IAOV,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBU,IAAAA,EAAkB,EAAA,MAC3BA,EAAGC,OAAOD,EAAGE,iBAAiBC,WAAU,KARH,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,QAYzClB,EAASG,iBAAiB,QAAS,WAG7BI,KAFcb,EAAMW,KAAK,GAAGG,MAAMF,QAErBJ,GAAbK,CAIab,IAPsB,EAOtBA,EAAAA,EAAAA,EAAMW,MAPgB,IAOV,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACxBY,iBAAiBE,UARiB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.5df08e66.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field');\nconst addRowEl = document.querySelector('.append-row');\nconst delRowEl = document.querySelector('.remove-row');\nconst addColEl = document.querySelector('.append-column');\nconst delColEl = document.querySelector('.remove-column');\nconst MAXlines = 10;\nconst MINlines = 2;\n\naddRowEl.addEventListener('click', () => {\n  const rowCount = table.rows.length;\n  const cellCount = table.rows[0].cells.length;\n  const row = table.insertRow(rowCount);\n\n  if (rowCount >= MAXlines) {\n    return;\n  }\n\n  for (let i = 0; i < cellCount; i++) {\n    const cell = row.insertCell(i);\n\n    cell.insertAdjacentHTML('beforeend', '<td></td>');\n  }\n});\n\ndelRowEl.addEventListener('click', () => {\n  const rowCount = table.rows.length;\n\n  if (rowCount <= MINlines) {\n    return;\n  }\n  table.deleteRow(rowCount - 1);\n});\n\naddColEl.addEventListener('click', () => {\n  const cellCount = table.rows[0].cells.length;\n\n  if (cellCount >= MAXlines) {\n    return;\n  }\n\n  for (const el of table.rows) {\n    el.append(el.lastElementChild.cloneNode(true));\n  }\n});\n\ndelColEl.addEventListener('click', () => {\n  const cellCount = table.rows[0].cells.length;\n\n  if (cellCount <= MINlines) {\n    return;\n  }\n\n  for (const el of table.rows) {\n    el.lastElementChild.remove();\n  }\n});\n"]}